Window:

 The main instance of the Web Page while being
 executed by Browser.
 
 Some methods and properties from window:

   - document: Inside window, we have the 'document',
    that is the HTML document itself and by that,
    it's possible to access many atributes and
    methods to manipulate HTML and CSS.

   - 'alert()': Open a alert panel in browser window,
    interactable to users.

   - 'confirm()': Open a confirmation panel, with
     options, like 'ok' or 'cancel'.

   - 'prompt()': Open a interactable panel with input
     text field, when user can enter data.


 Some methods and properties from document:

   - 'write()': Add a new line directly in the HTML body,
   after the already existent content there.


Variáveis em Javascript:

 Espaços de memória que podem ser definidos e nomeados,
 para armazenarem dados durante a execução do programa.
 Variáveis podem ser alteradas e podem ser de vários tipos
 diferentes. no Javascript, não existe tipagem solida, então
 as variáveis ao serem declaradas uma única vez, podem assumir
 ao longo da execução do programa, diversos tipos diferentes.

 Declaração:

 - 'var': Declara uma variável. Deve ser seguida do nome
   a ser dado para a variável.

 - '=': Sinal de atribuição, usado para atribuir um valor
   a uma variável, sempre da direita para a esquerda.

 Regras ao nomear variáveis:
  
  - Podem começar com letras, '$' ou '_'.
  - Não podem começar com números, mas podem ter números.
  - É possível usar acentos e símbolos.
  - Não podem conter espaços.
  - Não podem ser palavras reservadas.

 Dicas para nomear variáveis:

  - Maiúsculas e minúsculas fazem diferença.
  - Utilize nomes coerentes para as variáveis.


Tipos de dados:

 - 'number': Números, sendo números inteiros ou reais,
   positivos ou negativos.

     - 'Infinity': Número grande demais para o Javscript
        processar.

     - 'NaN': Valor que não considerado um número de fato.

 - 'string': Cadeias de caracteres (textos), sendo obrigatório
   o uso de aspas ('', "" ou ``) para envolver o texto. O texto
   pode ser constituído de caracteres alfanuméricos, símbolos e
   acentos.

 - 'boolean': Tipos lógicos (verdadeiro ou falso), sendo:
    'true' ou 'false'.

 - 'object': Dados do tipo objeto, que possuem uma estrutura
   de dados (arrays, objects, json). Obs: O tipo
   null pode ser considerado um objeto.

 - 'function': Funções, no Javascript, funções podem ser
   armazenadas em variáveis.

 - 'null': Tipo nulo, tipo usado para deixar uma variável
   'vazia'.

 - 'undefined': Valor não existente, não definido, diferente
   do nulo, não é um valor real, mas sim a falta de um valor
   definido para a variável.


Manipulando variaveis:

 Strings:

  - '+': Concatenação entre strings, o conteúdo anterior e posterior ao sinal '+'
    serão aglutinados em uma mesma sentença ou em uma mesma variável.

  - '${}': É possível usar um facilitador para concatenação de strings,
    quando se é necessário interpolar as strings (concatenar entre
    duas strings). Essa técnica é o template string, e para se usar,
    é necessário a string estar entre crase (``).

 Numbers:

  - '+': Suma entre dois números, precisa que ambos os valores
    (antes e depois do sinal) seja numéricos, se apenas um deles
    for string, será feita uma operação de concatenação.


Coversão de Valores:

 Numbers:

  A Classe Number pode ser utilizada para conversão de tipos
  numéricos, possuindo os metodos abaixo:

    - 'parseInt()': Converte um valor númerico em inteiro.
    - 'parseFloat()': Converte um valor númerico em real.

    * É possível utilizar também apenas 'Number()' ao converter,
    o que deixa aberto ao Javascrit optar pela melhor escolha
    no momento da conversão.

 Strings:

  A Classe String pode ser usada para conversão de strings, sendo
  possível utiliza-la diretamente: 'String()'.


Propriedades e métodos do tipo String:

  - 'length': Atributo que retorna número de caracteres de
    uma string.

  - 'toUpperCase()': Altera a string, jogando todos os caracters
    alfabéticos para o maiúsculo.

  - 'toLowerCase()': Altera a string, jogando todos os caracters
    alfabéticos para o minúsculo.

  - 'toLocaleString()': Localiza a string no contexto regional,
    permitindo configurações de acordo com país ou nacionalidade
    desejado.

Propriedades e métodos do tipo Number:

  - 'toFixed()': Altera as casas decimais do número, podendo ser
    passando o número de casas desejadas.



